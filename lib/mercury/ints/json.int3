:- module json.
:- interface.
:- import_module array.
:- import_module array2d.
:- import_module assoc_list.
:- import_module bag.
:- import_module bimap.
:- import_module bitmap.
:- import_module bool.
:- import_module calendar.
:- import_module char.
:- import_module cord.
:- import_module digraph.
:- import_module integer.
:- import_module io.
:- import_module list.
:- import_module map.
:- import_module maybe.
:- import_module pair.
:- import_module pqueue.
:- import_module queue.
:- import_module rational.
:- import_module rbtree.
:- import_module set_bbbtree.
:- import_module set_ctree234.
:- import_module set_ordlist.
:- import_module set_tree234.
:- import_module set_unordlist.
:- import_module stream.
:- import_module unit.
:- import_module version_array.
:- type allow_comments
	where	type_is_abstract_enum(1).
:- type allow_infinities
	where	type_is_abstract_enum(1).
:- type allow_repeated_members
	where	type_is_abstract_enum(2).
:- type allow_trailing_commas
	where	type_is_abstract_enum(1).
:- type array.
:- type comment.
:- type context.
:- type error_desc.
:- type from_string_result.
:- type maximum_nesting_depth.
:- type member_filter.
:- type non_finite_number_error.
:- type object.
:- type output_style
	where	type_is_abstract_enum(1).
:- type pointer.
:- type reader_params.
:- type value.
:- type writer_params.
:- type error(Error).
:- type res(Error).
:- type reader(Stream).
:- type writer(Stream).
:- type maybe_partial_res(T, Error).
:- type res(T, Error).
:- type result(T, Error).
:- inst (member_filter) == bound(member_filter((pred(in, in) is semidet)) ; no_member_filter).
:- inst (writer_params) == bound(writer_params(ground, ground, (json.member_filter))).
:- typeclass from_json(T).
:- typeclass to_json(T).
:- instance (json.from_json(bitmap)).
:- instance (json.from_json(bool)).
:- instance (json.from_json(char)).
:- instance (json.from_json(date)).
:- instance (json.from_json(duration)).
:- instance (json.from_json(integer)).
:- instance (json.from_json(rational)).
:- instance (json.from_json(unit)).
:- instance (json.from_json(json.pointer)).
:- instance (json.from_json(json.value)).
:- instance (json.from_json(int)).
:- instance (json.from_json(float)).
:- instance (json.from_json(string)).
:- instance (json.to_json(bitmap)).
:- instance (json.to_json(bool)).
:- instance (json.to_json(char)).
:- instance (json.to_json(date)).
:- instance (json.to_json(duration)).
:- instance (json.to_json(integer)).
:- instance (json.to_json(rational)).
:- instance (json.to_json(unit)).
:- instance (json.to_json(json.pointer)).
:- instance (json.to_json(json.value)).
:- instance (json.to_json(int)).
:- instance (json.to_json(float)).
:- instance (json.to_json(string)).
:- instance (json.from_json(array(T))) <= (json.from_json(T)).
:- instance (json.from_json(array2d(T))) <= (json.from_json(T)).
:- instance (json.from_json(bag(T))) <= (json.from_json(T)).
:- instance (json.from_json(cord(T))) <= (json.from_json(T)).
:- instance (json.from_json(digraph(T))) <= (json.from_json(T)).
:- instance (json.from_json(list(T))) <= (json.from_json(T)).
:- instance (json.from_json(maybe(T))) <= (json.from_json(T)).
:- instance (json.from_json(queue(T))) <= (json.from_json(T)).
:- instance (json.from_json(set_bbbtree(T))) <= (json.from_json(T)).
:- instance (json.from_json(set_ctree234(T))) <= (json.from_json(T)).
:- instance (json.from_json(set_ordlist(T))) <= (json.from_json(T)).
:- instance (json.from_json(set_tree234(T))) <= (json.from_json(T)).
:- instance (json.from_json(set_unordlist(T))) <= (json.from_json(T)).
:- instance (json.from_json(version_array(T))) <= (json.from_json(T)).
:- instance (json.from_json(bimap(K, V))) <= (json.from_json(K), json.from_json(V)).
:- instance (json.from_json(map(K, V))) <= (json.from_json(K), json.from_json(V)).
:- instance (json.from_json(maybe_error(T, E))) <= (json.from_json(T), json.from_json(E)).
:- instance (json.from_json(pair(A, B))) <= (json.from_json(A), json.from_json(B)).
:- instance (json.from_json(pqueue(K, V))) <= (json.from_json(K), json.from_json(V)).
:- instance (json.from_json(rbtree(K, V))) <= (json.from_json(K), json.from_json(V)).
:- instance (json.to_json(array(T))) <= (json.to_json(T)).
:- instance (json.to_json(array2d(T))) <= (json.to_json(T)).
:- instance (json.to_json(bag(T))) <= (json.to_json(T)).
:- instance (json.to_json(cord(T))) <= (json.to_json(T)).
:- instance (json.to_json(digraph(T))) <= (json.to_json(T)).
:- instance (json.to_json(list(T))) <= (json.to_json(T)).
:- instance (json.to_json(maybe(T))) <= (json.to_json(T)).
:- instance (json.to_json(queue(T))) <= (json.to_json(T)).
:- instance (json.to_json(set_bbbtree(T))) <= (json.to_json(T)).
:- instance (json.to_json(set_ctree234(T))) <= (json.to_json(T)).
:- instance (json.to_json(set_ordlist(T))) <= (json.to_json(T)).
:- instance (json.to_json(set_tree234(T))) <= (json.to_json(T)).
:- instance (json.to_json(set_unordlist(T))) <= (json.to_json(T)).
:- instance (json.to_json(version_array(T))) <= (json.to_json(T)).
:- instance (json.to_json(bimap(K, V))) <= (json.to_json(K), json.to_json(V)).
:- instance (json.to_json(map(K, V))) <= (json.to_json(K), json.to_json(V)).
:- instance (json.to_json(maybe_error(T, E))) <= (json.to_json(T), json.to_json(E)).
:- instance (json.to_json(pair(A, B))) <= (json.to_json(A), json.to_json(B)).
:- instance (json.to_json(pqueue(K, V))) <= (json.to_json(K), json.to_json(V)).
:- instance (json.to_json(rbtree(K, V))) <= (json.to_json(K), json.to_json(V)).
:- instance (stream.error(json.error(Error))) <= (stream.error(Error)).
:- instance (stream.input(json.reader(Stream), io)) <= (stream.input(Stream, io)).
:- instance (stream.reader(json.reader(Stream), json.value, io, json.error(Error))) <= (stream.line_oriented(Stream, io), stream.putback(Stream, char, io, Error)).
:- instance (stream.stream(json.reader(Stream), io)) <= (stream.stream(Stream, io)).
