:- module (json.string_reader).
:- use_module array, array2d, assoc_list, bag, bimap, bitmap, bool, builtin, calendar, char, cord, digraph, float, int, integer, io, list, map, maybe, mutvar, pair, pqueue, private_builtin, queue, rational, rbtree, require, set_bbbtree, set_ctree234, set_ordlist, set_tree234, set_unordlist, store, stream, string, unit, univ, version_array, (json.char_buffer), (json.json_lexer), (json.json_parser), (json.marshal), (json.pointer), (json.string_reader), (json.unmarshal), (json.writer), (string.builder).
:- type json.string_reader.string_reader_state
	--->	string_reader_state .
:- type json.string_reader.string_reader
	--->	string_reader(((json.string_reader).reader_maybe_name) :: maybe.maybe(string), ((json.string_reader).reader_src) :: string, ((json.string_reader).reader_src_length) :: int, ((json.string_reader).reader_mutable_info) :: store.generic_mutvar(json.string_reader.reader_mutable_info, json.string_reader.string_reader_state)).
:- type json.string_reader.reader_mutable_info
	--->	reader_mutable_info(((json.string_reader).rmi_line_number) :: int, ((json.string_reader).rmi_last_index) :: int).
:- instance (stream.stream(json.string_reader.string_reader, json.string_reader.string_reader_state)).
:- instance (stream.reader(json.string_reader.string_reader, character, json.string_reader.string_reader_state, json.string_reader.string_reader_error)).
:- instance (stream.putback(json.string_reader.string_reader, character, json.string_reader.string_reader_state, json.string_reader.string_reader_error)).
:- instance (stream.line_oriented(json.string_reader.string_reader, json.string_reader.string_reader_state)).
:- instance (stream.input(json.string_reader.string_reader, json.string_reader.string_reader_state)) where [

].
:- instance (stream.error(json.string_reader.string_reader_error)).
:- instance (store.store(json.string_reader.string_reader_state)) where [

].
(json.string_reader).init_string_state(json.string_reader.string_reader_state).
